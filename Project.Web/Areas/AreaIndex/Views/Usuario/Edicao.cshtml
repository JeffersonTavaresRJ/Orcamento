@model Project.Web.Areas.AreaIndex.Models.UsuarioViewModelEdicao
@{
    ViewBag.Title = "Usuário";
}

<script src="~/js/jquery.unobtrusive-ajax.min.js"></script>
<script src="~/js/jquery.validate.unobtrusive.min.js"></script>


<script type="text/javascript">
    function OnFailure(result) {
        alert("Erro:" + result.msg);
    }

    function OnSuccess(result) {

        //Como o modal é renderizado dentro da página de ConsultaFiltro.cshntm,
        // pode-se pegar o handle da tabela que já está criada no ConsultaFiltro...
        // e aplicar a atualização da table..
        var tabela = $('#tabela').DataTable();
        tabela.ajax.reload();

        //exibindo a mensagem na tela de consulta..
        //isso pode ser feito porque a tela de edição é renderizada na tela de consulta..
        $("#mensagem").html(result.msg);
        $("#alert").show().fadeOut(8000);//exibe e depois esconde o alert..


        //fechando o modal..
        $(".close").click();

    }
</script>

<div id="modal_dialog" class="modal-dialog">
    <div class="modal-content">
        @using (Ajax.BeginForm("Editar", "Usuario", new AjaxOptions()
        {
            HttpMethod = "POST",
            OnFailure = "OnFailure",
            OnSuccess = "OnSuccess"
        })
               )
        {
            <div class="modal-header">
                <h5 class="modal-title">Editar Usuário</h5>

                <button type="button" class="close" data-dismiss="modal">
                    <span aria-hidden="true">×</span>
                    <span class="sr-only">Close</span>
                </button>

            </div>
            <div class="modal-body">


                @Html.ValidationSummary(true)


                <div class="row">
                    <div class="form-group mb-1 col-12">
                        @Html.LabelFor(model => model.Id_Usuario)

                        @Html.TextBoxFor(model => model.Id_Usuario, new { @class = "form-control", @placehoder = "Informe a chave" })
                        <span style="color:red">
                            @Html.ValidationMessageFor(model => model.Id_Usuario)
                        </span>

                    </div>

                    <div class="form-group mb-1 col-12">
                        @Html.LabelFor(model => model.Nome)

                        @Html.TextBoxFor(model => model.Nome, new { @class = "form-control", @placehoder = "Informe o nome" })
                        <span style="color:red">
                            @Html.ValidationMessageFor(model => model.Nome)
                        </span>

                    </div>

                    <div class="form-group mb-1 col-12">
                        @Html.LabelFor(model => model.Id_Perfil)

                        @Html.DropDownListFor(model => model.Id_Perfil, (SelectList)ViewBag.ListaPerfis, "--Selecione--", new { @class = "form-control " })
                        <span style="color:red">
                            @Html.ValidationMessageFor(model => model.Id_Perfil)
                        </span>

                    </div>

                    <div class="form-check mb-1 mt-3 col-12">

                        @Html.CheckBox("RedefinirSenha", false)
                        @Html.LabelFor(model => model.RedefinirSenha)

                    </div>

                </div>

            </div>
            <div class="modal-footer">
                <input type="submit" value="Salvar" class="btn btn-outline-dark" />
                <input type="button" value="Cancelar" class="btn btn-outline-dark" data-dismiss="modal" />
            </div>

        }

    </div>
</div>